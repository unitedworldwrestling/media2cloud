AWSTemplateFormatVersion: "2010-09-09"

Description: (SO0050-search-engine) Media2Cloud - create elasticsearch cluster for search feature

#
# Mappings to store fixed value of the solution
#
Mappings:
    ESCluster:
        Global:
            Version: 'OpenSearch_1.0'
            IndexName: media-analysis
        Index:
            Name: media-analysis
        Small:
            InstanceCount: 2
            VolumeSize: 25
            MasterSize: "t2.small.search"
            WorkerSize: "m4.large.search"
        Medium:
            InstanceCount: 4
            VolumeSize: 25
            MasterSize: "t2.medium.search"
            WorkerSize: "m4.large.search"
        Large:
            InstanceCount: 8
            VolumeSize: 25
            MasterSize: "t2.medium.search"
            WorkerSize: "m4.large.search"

Parameters:
    SolutionId:
        Type: String
        Description: "part of the resource naming"
    SolutionUuid:
        Type: String
        Description: "unique solution uuid"
    Version:
        Type: String
        Description: "solution version"
    AnonymousUsage:
        Type: String
        Description: "anonymous usage"
    RootStackName:
        Type: String
        Description: "part of the resource naming"
    S3Bucket:
        Type: String
        Description: solution bucket
        AllowedPattern: "[a-z][a-z0-9-_]*"
    KeyPrefix:
        Type: String
        Description: solution key prefix
    CustomResourceArn:
        Type: String
        Description: for post-processing
    ClusterSize:
        Type: String
        Description: Elasticsearch cluster size
        Default: Small
        AllowedValues:
            - Small
            - Medium
            - Large

Metadata:
    cfn-lint:
        config:
            ignore_checks:
                # ignore S3Bucket, KeyPrefix not being used
                - W2001
    AWS::CloudFormation::Interface:
        ParameterGroups:
            -
                Label:
                    default: "Solution Configuration"
                Parameters:
                    - SolutionId
                    - RootStackName
                    - S3Bucket
                    - KeyPrefix
                    - SolutionUuid
                    - Version
                    - AnonymousUsage
            -
                Label:
                    default: "Elasticsearch Configuration"
                Parameters:
                    - ClusterSize
            -
                Label:
                    default: "Other resources"
                Parameters:
                    - CustomResourceArn
        ParameterLabels:
            SolutionId:
                default: "Solution Id"
            RootStackName:
                default: "Top Stack Name"
            S3Bucket:
                default: "Solution Bucket"
            KeyPrefix:
                default: "Solution KeyPrefix"
            CustomResourceArn:
                default: "Custom Resource Arn"
            ClusterSize:
                default: "Cluster Size"
            SolutionUuid:
                default: "Solution Uuid"
            Version:
                default: "Solution Version"
            AnonymousUsage:
                default: "Anonymous Usage"

Resources:
    # ES domain name must be lowercase
    LowerCaseDomainName:
        Type: Custom::LowerCaseDomainName
        Properties:
            ServiceToken: !Ref CustomResourceArn
            FunctionName: StringManipulation
            InputString: !Sub "${SolutionId}-${RootStackName}-storage"
            Operations: "lower,maxlen=28,minlen=3,dash"
            OutputReference: ElasticsearchDomainName

    #
    # Elasticsearch engine for media analysis
    #
    Elasticsearch:
        # DeletionPolicy: Retain
        # UpdateReplacePolicy: Retain
        Type: AWS::OpenSearchService::Domain
        Metadata:
            cfn_nag:
                rules_to_suppress:
                    -
                        id: W28
                        reason: "Elasticsearch domain name needs to remain the same to maintain the indexed documents."
                    -
                        id: W54
                        reason: "EncryptionAtRestOptions not supported for t2 instance, https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
            cfn-lint:
                config:
                    ignore_checks:
                        # ignore !FindInMap with !Ref ClusterSize warning 
                        - W1011
        Properties:
            EngineVersion: !FindInMap [
                "ESCluster",
                "Global",
                "Version"
            ]
            DomainName: !GetAtt LowerCaseDomainName.OutputString
            ClusterConfig:
                DedicatedMasterEnabled: true
                DedicatedMasterCount: 3
                DedicatedMasterType: !FindInMap [
                    "ESCluster",
                    !Ref ClusterSize,
                    "MasterSize"
                ]
                InstanceCount: !FindInMap [
                    "ESCluster",
                    !Ref ClusterSize,
                    "InstanceCount"
                ]
                ZoneAwarenessEnabled: true
                InstanceType: !FindInMap [
                    "ESCluster",
                    !Ref ClusterSize,
                    "WorkerSize"
                ]
            EBSOptions:
                EBSEnabled: true
                Iops: 0
                VolumeSize: !FindInMap [
                    "ESCluster",
                    !Ref ClusterSize,
                    "VolumeSize"
                ]
                VolumeType: "gp2"
            AdvancedOptions:
                rest.action.multi.allow_explicit_index: "true"
            # t2 instances don't support Encryption at rest
            # EncryptionAtRestOptions:
            #    Enabled: true
            AccessPolicies:
                Version: "2012-10-17"
                Statement:
                    -
                        Effect: "Allow"
                        Principal:
                            AWS: !Sub "${AWS::AccountId}"
                        Action:
                            - es:ESHttpDelete
                            - es:ESHttpGet
                            - es:ESHttpHead
                            - es:ESHttpPost
                            - es:ESHttpPut
                        Resource:
                            - !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${LowerCaseDomainName.OutputString}/*"

    #
    # custom resource to create index on es cluster
    #
    CreateIndex:
        Type: Custom::CreateIndex
        Properties:
            ServiceToken: !Ref CustomResourceArn
            FunctionName: CreateIndex
            DomainEndpoint: !GetAtt Elasticsearch.DomainEndpoint
            IndexName: !FindInMap [
                "ESCluster",
                "Global",
                "IndexName"
            ]

    #
    # Send anonymous data
    #
    SendConfig:
        DependsOn: CreateIndex
        Type: Custom::SendConfig
        Properties:
            ServiceToken: !Ref CustomResourceArn
            FunctionName: SendConfig
            SolutionId: !Ref SolutionId
            SolutionUuid: !Ref SolutionUuid
            Version: !Ref Version
            AnonymousUsage: !Ref AnonymousUsage
            ClusterSize: !Ref ClusterSize

Outputs:
    DomainName:
        Value: !Ref Elasticsearch
        Description: "Elasticsearch Domain Name"

    DomainEndpoint:
        Value: !GetAtt Elasticsearch.DomainEndpoint
        Description: "Elasticsearch Domain Endpoint"

    IndexName:
        Value: !FindInMap [
            "ESCluster",
            "Global",
            "IndexName"
        ]
        Description: "Elasticsearch Index Document Name"

    Version:
        Value: !FindInMap [
            "ESCluster",
            "Global",
            "Version"
        ]
        Description: "Elasticsearch Version"
